server {
  # nginx listen on port 80 IPV4 and IPV6
  listen 80;
  listen [::]:80 default ipv6only=on;

  # serve content from root directory
  root /usr/share/nginx/html;
  index index.html;

  # match all hostnames
  server_name _;

  # tell nginx to search for pre-brotli version of a resource
  brotli_static on;

  # tell nginx to search for pre-gzipped version of a resource
  gzip_static on;

  # redirect to root file for all non matching routes
  # nginx send the file and the route is handled by application
  location / {
    try_files $uri $uri/ /index.html;
  }

  # cache strategy for CSS / JS resources
  # matches any request ending in css, js
  location ~* \.(?:css|js|png)$ {
    expires 1y;
    access_log off;
    add_header Cache-Control "public";
  }

  # disable cache for SW resource
  # matches the query /runtime-env.js only and stop searching
  location = /runtime-env.js {
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    expires off;
    access_log off;
    proxy_cache_bypass $http_pragma;
    proxy_cache_revalidate on;
    proxy_no_cache 1;
  }
}
